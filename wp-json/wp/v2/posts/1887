{"id":1887,"date":"2020-02-26T12:41:36","date_gmt":"2020-02-26T11:41:36","guid":{"rendered":"https:\/\/machinelearningspace.com\/?p=1887"},"modified":"2022-01-02T22:33:44","modified_gmt":"2022-01-02T21:33:44","slug":"2d-object-tracking-using-kalman-filter","status":"publish","type":"post","link":"https:\/\/machinelearningspace.com\/2d-object-tracking-using-kalman-filter\/","title":{"rendered":"Object Tracking: 2-D Object Tracking using Kalman Filter in Python"},"content":{"rendered":"\n<div class=\"responsive-embed-container\">\n<figure><iframe loading=\"lazy\" src=\"https:\/\/www.youtube.com\/embed\/niFzS2t1F-8\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" width=\"560\" height=\"315\" frameborder=\"0\"><\/iframe><\/figure><\/div>\n\n\n\n<p>In the <a href=\"https:\/\/machinelearningspace.com\/object-tracking-simple-implementation-of-kalman-filter-in-python\/\">previous tutorial<\/a>, we&#8217;ve discussed the implementation of the Kalman filter in Python for tracking a moving object in 1-D direction. Now, we&#8217;re going to continue our discussion on object tracking, specifically in this part, we&#8217;re going to discover 2-D object tracking using the Kalman filter.<\/p>\n\n\n\n<p>As I mentioned already in the previous tutorial, the 1-D Kalman filter concept is a prerequisite for the tutorials related to the object tracking algorithm that you will find in my blogs. So, I suppose that you&#8217;ve read it carefully. Otherwise, I strongly recommend reading it first before continuing this one.  So that you can follow this guide easily.<\/p>\n\n\n\n<h3>State transition matrix A and control matrix B <\/h3>\n\n\n\n<p>Remember, in 1-D Kalman Filter, we consider that both state and velocity are in one-direction only. Based on Kinematic  equation, the relation between the position <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-7e5fbfa0bbbd9f3051cd156a0f1b5e31_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#120;\" title=\"Rendered by QuickLaTeX.com\" height=\"8\" width=\"10\" style=\"vertical-align: 0px;\"\/> and velocity <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-770d10fb0f6590bea84ce31bd1af6d0c_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#92;&#100;&#111;&#116;&#32;&#120;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"10\" style=\"vertical-align: 0px;\"\/> can be written as the following: <\/p>\n\n\n\n<p> <a name=\"id3677551405\"><\/a><p class=\"ql-center-displayed-equation\" style=\"line-height: 44px;\"><span class=\"ql-right-eqno\"> (1) <\/span><span class=\"ql-left-eqno\"> &nbsp; <\/span><img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-66433c7ca819bd7b8f4dc9c8f3367476_l3.png\" height=\"44\" width=\"346\" class=\"ql-img-displayed-equation quicklatex-auto-format\" alt=\"&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#120;&#125;&#95;&#107;&#32;&#61;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#120;&#95;&#107;&#92;&#92;&#32;&#92;&#100;&#111;&#116;&#32;&#120;&#95;&#107;&#32;&#92;&#92;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#61;&#32;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#120;&#95;&#123;&#107;&#45;&#49;&#125;&#43;&#32;&#92;&#100;&#111;&#116;&#32;&#120;&#95;&#123;&#107;&#45;&#49;&#125;&#92;&#68;&#101;&#108;&#116;&#97;&#32;&#116;&#43;&#32;&#49;&#47;&#50;&#32;&#92;&#100;&#100;&#111;&#116;&#32;&#120;&#95;&#123;&#107;&#45;&#49;&#125;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#94;&#50;&#125;&#125;&#92;&#92;&#32;&#32;&#92;&#100;&#111;&#116;&#32;&#120;&#95;&#123;&#107;&#45;&#49;&#125;&#43;&#32;&#92;&#100;&#100;&#111;&#116;&#32;&#120;&#95;&#123;&#107;&#45;&#49;&#125;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#32;&#92;&#92;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#92;&#101;&#110;&#100;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;\" title=\"Rendered by QuickLaTeX.com\"\/><\/p> <\/p>\n\n\n\n<p>Then we can write eq.(<a href=\"#id3677551405\">1<\/a>)  in the form of matrix multiplication as follows:<\/p>\n\n\n\n<p>  <a name=\"id286783683\"><\/a><p class=\"ql-center-displayed-equation\" style=\"line-height: 44px;\"><span class=\"ql-right-eqno\"> (2) <\/span><span class=\"ql-left-eqno\"> &nbsp; <\/span><img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-e6e2d565a04cf7a2595913099abbbba6_l3.png\" height=\"44\" width=\"358\" class=\"ql-img-displayed-equation quicklatex-auto-format\" alt=\"&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#120;&#125;&#95;&#107;&#32;&#61;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#120;&#95;&#107;&#92;&#92;&#32;&#92;&#100;&#111;&#116;&#32;&#120;&#95;&#107;&#32;&#92;&#92;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#61;&#32;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#49;&#32;&#38;&#32;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#92;&#92;&#48;&#32;&#38;&#32;&#49;&#92;&#92;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#120;&#95;&#123;&#107;&#45;&#49;&#125;&#32;&#92;&#92;&#32;&#32;&#92;&#100;&#111;&#116;&#32;&#120;&#95;&#123;&#107;&#45;&#49;&#125;&#32;&#92;&#92;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#43;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#92;&#102;&#114;&#97;&#99;&#123;&#49;&#125;&#123;&#50;&#125;&#40;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#41;&#94;&#50;&#32;&#92;&#92;&#32;&#32;&#32;&#40;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#32;&#92;&#92;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#92;&#100;&#100;&#111;&#116;&#32;&#120;&#95;&#123;&#107;&#45;&#49;&#125;&#32;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;\" title=\"Rendered by QuickLaTeX.com\"\/><\/p>   <\/p>\n\n\n\n<p>Now, we&#8217;re going to focus on 2-D Kalman Filter. The equations of 2-D  Kalman Filter whose position and velocity must be considered in 2-dimensional direction, the <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-7e5fbfa0bbbd9f3051cd156a0f1b5e31_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#120;\" title=\"Rendered by QuickLaTeX.com\" height=\"8\" width=\"10\" style=\"vertical-align: 0px;\"\/>&#8211; and <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-38461fc041e953482219abf5d4cce1cb_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#121;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"9\" style=\"vertical-align: -4px;\"\/>&#8211; directions, can be created by modifying the 1-D Kalman Filter equations. Meaning that instead of considering only for the position and velocity in one direction, let&#8217;s say the <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-7e5fbfa0bbbd9f3051cd156a0f1b5e31_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#120;\" title=\"Rendered by QuickLaTeX.com\" height=\"8\" width=\"10\" style=\"vertical-align: 0px;\"\/>-direction, we need to take into account the position and velocity in the <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-38461fc041e953482219abf5d4cce1cb_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#121;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"9\" style=\"vertical-align: -4px;\"\/>-direction as well. <\/p>\n\n\n\n<p>The state in time <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-d42bc2203d6f76ad01b27ac9acc0bee1_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#107;\" title=\"Rendered by QuickLaTeX.com\" height=\"13\" width=\"9\" style=\"vertical-align: 0px;\"\/> can be predicted by the previous state in time <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-7dfca2445cd362ac42fb9032c9cf2367_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#107;&#45;&#49;\" title=\"Rendered by QuickLaTeX.com\" height=\"14\" width=\"39\" style=\"vertical-align: -1px;\"\/>. Let <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-7e5fbfa0bbbd9f3051cd156a0f1b5e31_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#120;\" title=\"Rendered by QuickLaTeX.com\" height=\"8\" width=\"10\" style=\"vertical-align: 0px;\"\/> and <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-38461fc041e953482219abf5d4cce1cb_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#121;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"9\" style=\"vertical-align: -4px;\"\/> be the positions in the <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-7e5fbfa0bbbd9f3051cd156a0f1b5e31_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#120;\" title=\"Rendered by QuickLaTeX.com\" height=\"8\" width=\"10\" style=\"vertical-align: 0px;\"\/>&#8211; and <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-38461fc041e953482219abf5d4cce1cb_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#121;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"9\" style=\"vertical-align: -4px;\"\/>-directions, respectively, and also let <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-02f1f273123c3399663d27f86372ec28_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#92;&#100;&#111;&#116;&#32;&#32;&#120;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"10\" style=\"vertical-align: 0px;\"\/> and <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-63e253a73a05b60ef47437af4e7cb120_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#92;&#100;&#111;&#116;&#32;&#32;&#121;\" title=\"Rendered by QuickLaTeX.com\" height=\"16\" width=\"9\" style=\"vertical-align: -4px;\"\/> be the velocities in <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-7e5fbfa0bbbd9f3051cd156a0f1b5e31_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#120;\" title=\"Rendered by QuickLaTeX.com\" height=\"8\" width=\"10\" style=\"vertical-align: 0px;\"\/>&#8211; and <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-38461fc041e953482219abf5d4cce1cb_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#121;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"9\" style=\"vertical-align: -4px;\"\/>-directions, respectively.  Then the 2-D Kinematic equation for state <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-2c0c9cc1d15c8bbf6f8800e7c7d50482_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#120;&#125;&#95;&#107;\" title=\"Rendered by QuickLaTeX.com\" height=\"11\" width=\"18\" style=\"vertical-align: -3px;\"\/> can be written as:<\/p>\n\n\n\n<p><a name=\"id3871371663\"><\/a><p class=\"ql-center-displayed-equation\" style=\"line-height: 88px;\"><span class=\"ql-right-eqno\"> (3) <\/span><span class=\"ql-left-eqno\"> &nbsp; <\/span><img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-2b75345ed0c80f0debc89d3b0698cffe_l3.png\" height=\"88\" width=\"355\" class=\"ql-img-displayed-equation quicklatex-auto-format\" alt=\"&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;&#32;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#120;&#125;&#95;&#107;&#32;&#61;&#32;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#120;&#95;&#107;&#92;&#92;&#121;&#95;&#107;&#32;&#92;&#92;&#32;&#92;&#100;&#111;&#116;&#32;&#32;&#120;&#95;&#107;&#92;&#92;&#92;&#100;&#111;&#116;&#32;&#32;&#121;&#95;&#107;&#32;&#92;&#92;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#61;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#120;&#95;&#123;&#107;&#45;&#49;&#125;&#43;&#32;&#32;&#92;&#100;&#111;&#116;&#32;&#32;&#120;&#95;&#123;&#107;&#45;&#49;&#125;&#92;&#68;&#101;&#108;&#116;&#97;&#32;&#116;&#43;&#32;&#49;&#47;&#50;&#32;&#32;&#92;&#100;&#100;&#111;&#116;&#32;&#32;&#120;&#95;&#123;&#107;&#45;&#49;&#125;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#94;&#50;&#125;&#125;&#92;&#92;&#32;&#121;&#95;&#123;&#107;&#45;&#49;&#125;&#43;&#32;&#32;&#92;&#100;&#111;&#116;&#32;&#121;&#95;&#123;&#107;&#45;&#49;&#125;&#92;&#68;&#101;&#108;&#116;&#97;&#32;&#116;&#43;&#32;&#49;&#47;&#50;&#32;&#32;&#92;&#100;&#100;&#111;&#116;&#32;&#32;&#121;&#95;&#123;&#107;&#45;&#49;&#125;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#94;&#50;&#125;&#125;&#92;&#92;&#32;&#32;&#32;&#32;&#92;&#100;&#111;&#116;&#32;&#32;&#120;&#95;&#123;&#107;&#45;&#49;&#125;&#43;&#32;&#32;&#92;&#100;&#100;&#111;&#116;&#32;&#32;&#120;&#95;&#123;&#107;&#45;&#49;&#125;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#32;&#92;&#92;&#32;&#32;&#32;&#92;&#100;&#111;&#116;&#32;&#32;&#121;&#95;&#123;&#107;&#45;&#49;&#125;&#43;&#32;&#32;&#92;&#100;&#100;&#111;&#116;&#32;&#32;&#121;&#95;&#123;&#107;&#45;&#49;&#125;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#32;&#92;&#92;&#32;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#92;&#101;&#110;&#100;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;\" title=\"Rendered by QuickLaTeX.com\"\/><\/p> <\/p>\n\n\n\n<p>We can write eq.(<a href=\"#id3871371663\">3<\/a>) into the form of matrix multiplication as follows:<\/p>\n\n\n\n<p> <a name=\"id3826491201\"><\/a><p class=\"ql-center-displayed-equation\" style=\"line-height: 88px;\"><span class=\"ql-right-eqno\"> (4) <\/span><span class=\"ql-left-eqno\"> &nbsp; <\/span><img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-17a06922ad76e9d65285cdbe93182da3_l3.png\" height=\"88\" width=\"525\" class=\"ql-img-displayed-equation quicklatex-auto-format\" alt=\"&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;&#32;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#120;&#125;&#95;&#107;&#32;&#61;&#32;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#120;&#95;&#107;&#92;&#92;&#121;&#95;&#107;&#32;&#92;&#92;&#32;&#92;&#100;&#111;&#116;&#32;&#32;&#120;&#95;&#107;&#92;&#92;&#92;&#100;&#111;&#116;&#32;&#32;&#121;&#95;&#107;&#32;&#92;&#92;&#32;&#32;&#32;&#32;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#61;&#32;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#49;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#32;&#38;&#32;&#48;&#32;&#92;&#92;&#48;&#32;&#38;&#32;&#49;&#32;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#32;&#32;&#92;&#92;&#32;&#48;&#32;&#38;&#32;&#48;&#32;&#32;&#38;&#32;&#49;&#32;&#38;&#32;&#48;&#32;&#32;&#92;&#92;&#32;&#32;&#48;&#32;&#38;&#32;&#48;&#32;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#49;&#32;&#32;&#92;&#92;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#120;&#95;&#123;&#107;&#45;&#49;&#125;&#32;&#92;&#92;&#32;&#32;&#121;&#95;&#123;&#107;&#45;&#49;&#125;&#32;&#92;&#92;&#32;&#92;&#100;&#111;&#116;&#32;&#32;&#120;&#95;&#123;&#107;&#45;&#49;&#125;&#32;&#32;&#92;&#92;&#92;&#100;&#111;&#116;&#32;&#32;&#121;&#95;&#123;&#107;&#45;&#49;&#125;&#32;&#32;&#92;&#92;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#43;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#32;&#92;&#102;&#114;&#97;&#99;&#123;&#49;&#125;&#123;&#50;&#125;&#40;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#41;&#94;&#50;&#32;&#38;&#32;&#48;&#32;&#92;&#92;&#32;&#48;&#32;&#38;&#32;&#92;&#102;&#114;&#97;&#99;&#123;&#49;&#125;&#123;&#50;&#125;&#40;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#41;&#94;&#50;&#32;&#92;&#92;&#32;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#38;&#32;&#48;&#32;&#92;&#92;&#32;&#32;&#48;&#32;&#38;&#32;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#32;&#92;&#92;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#32;&#92;&#100;&#100;&#111;&#116;&#32;&#32;&#120;&#95;&#123;&#107;&#45;&#49;&#125;&#32;&#92;&#92;&#32;&#92;&#100;&#100;&#111;&#116;&#32;&#32;&#121;&#95;&#123;&#107;&#45;&#49;&#125;&#32;&#92;&#92;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;\" title=\"Rendered by QuickLaTeX.com\"\/><\/p>   <\/p>\n\n\n\n<p>The eq.(<a href=\"#id3826491201\">4<\/a>) can be simplified as follows: <\/p>\n\n\n\n<p><a name=\"id2248339877\"><\/a><p class=\"ql-center-displayed-equation\" style=\"line-height: 88px;\"><span class=\"ql-right-eqno\"> (5) <\/span><span class=\"ql-left-eqno\"> &nbsp; <\/span><img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-813dddc7a28665369363f703102255c0_l3.png\" height=\"88\" width=\"420\" class=\"ql-img-displayed-equation quicklatex-auto-format\" alt=\"&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#120;&#125;&#95;&#107;&#32;&#61;&#32;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#49;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#32;&#38;&#32;&#48;&#92;&#92;&#48;&#32;&#38;&#32;&#49;&#32;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#32;&#32;&#92;&#92;&#32;&#48;&#32;&#38;&#32;&#48;&#32;&#32;&#38;&#32;&#49;&#32;&#38;&#32;&#48;&#32;&#32;&#92;&#92;&#32;&#32;&#48;&#32;&#38;&#32;&#48;&#32;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#49;&#32;&#32;&#92;&#92;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#32;&#32;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#120;&#125;&#95;&#123;&#107;&#45;&#49;&#125;&#32;&#43;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#92;&#102;&#114;&#97;&#99;&#123;&#49;&#125;&#123;&#50;&#125;&#40;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#41;&#94;&#50;&#32;&#38;&#32;&#48;&#32;&#92;&#92;&#32;&#48;&#32;&#38;&#32;&#92;&#102;&#114;&#97;&#99;&#123;&#49;&#125;&#123;&#50;&#125;&#40;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#41;&#94;&#50;&#32;&#92;&#92;&#32;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#38;&#32;&#48;&#32;&#92;&#92;&#32;&#32;&#48;&#32;&#38;&#32;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#32;&#92;&#92;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#97;&#125;&#125;&#95;&#123;&#107;&#45;&#49;&#125;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;\" title=\"Rendered by QuickLaTeX.com\"\/><\/p>   <\/p>\n\n\n\n<p>Where <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-2c0c9cc1d15c8bbf6f8800e7c7d50482_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#120;&#125;&#95;&#107;\" title=\"Rendered by QuickLaTeX.com\" height=\"11\" width=\"18\" style=\"vertical-align: -3px;\"\/> is the current state, <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-648030bf53c2fbd3a6cf5095017b4653_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#120;&#125;&#95;&#123;&#107;&#45;&#49;&#125;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"35\" style=\"vertical-align: -4px;\"\/> is the previous state, and  <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-aa6e9bd9f600bd8dac43309af9a22b2c_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#97;&#125;&#95;&#32;&#123;&#107;&#45;&#49;&#125;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"34\" style=\"vertical-align: -4px;\"\/> is a vector of the previous acceleration in <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-7e5fbfa0bbbd9f3051cd156a0f1b5e31_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#120;\" title=\"Rendered by QuickLaTeX.com\" height=\"8\" width=\"10\" style=\"vertical-align: 0px;\"\/>&#8211; and  <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-38461fc041e953482219abf5d4cce1cb_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#121;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"9\" style=\"vertical-align: -4px;\"\/>-directions.<\/p>\n\n\n\n<p>So, we the matrices A and B as follows:<\/p>\n\n\n\n<p> <a name=\"id2300232522\"><\/a><p class=\"ql-center-displayed-equation\" style=\"line-height: 86px;\"><span class=\"ql-right-eqno\"> (6) <\/span><span class=\"ql-left-eqno\"> &nbsp; <\/span><img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-17c37121fa29fffcde0437488177aa62_l3.png\" height=\"86\" width=\"167\" class=\"ql-img-displayed-equation quicklatex-auto-format\" alt=\"&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#65;&#125;&#32;&#61;&#32;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#49;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#32;&#38;&#32;&#48;&#92;&#92;&#48;&#32;&#38;&#32;&#49;&#32;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#32;&#32;&#92;&#92;&#32;&#48;&#32;&#38;&#32;&#48;&#32;&#32;&#38;&#32;&#49;&#32;&#38;&#32;&#48;&#32;&#32;&#92;&#92;&#32;&#32;&#48;&#32;&#38;&#32;&#48;&#32;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#49;&#32;&#32;&#92;&#92;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#32;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;\" title=\"Rendered by QuickLaTeX.com\"\/><\/p>   <\/p>\n\n\n\n<p><a name=\"id841436821\"><\/a><p class=\"ql-center-displayed-equation\" style=\"line-height: 88px;\"><span class=\"ql-right-eqno\"> (7) <\/span><span class=\"ql-left-eqno\"> &nbsp; <\/span><img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-64478aa0536b92fe7893073ffc26aeba_l3.png\" height=\"88\" width=\"180\" class=\"ql-img-displayed-equation quicklatex-auto-format\" alt=\"&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#66;&#125;&#32;&#61;&#32;&#32;&#32;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#92;&#102;&#114;&#97;&#99;&#123;&#49;&#125;&#123;&#50;&#125;&#40;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#41;&#94;&#50;&#32;&#38;&#32;&#48;&#32;&#92;&#92;&#32;&#48;&#32;&#38;&#32;&#92;&#102;&#114;&#97;&#99;&#123;&#49;&#125;&#123;&#50;&#125;&#40;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#41;&#94;&#50;&#32;&#92;&#92;&#32;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#38;&#32;&#48;&#32;&#92;&#92;&#32;&#32;&#48;&#32;&#38;&#32;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#125;&#32;&#92;&#92;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#32;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;\" title=\"Rendered by QuickLaTeX.com\"\/><\/p>   <\/p>\n\n\n\n<p>Notice: Pay attention to the notation: <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-2c0c9cc1d15c8bbf6f8800e7c7d50482_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#120;&#125;&#95;&#107;\" title=\"Rendered by QuickLaTeX.com\" height=\"11\" width=\"18\" style=\"vertical-align: -3px;\"\/> and <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-9f7a125c094d5cd793eb4a83bb8318ce_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#120;&#95;&#107;\" title=\"Rendered by QuickLaTeX.com\" height=\"11\" width=\"17\" style=\"vertical-align: -3px;\"\/>,  they are  two different things. Where the  <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-2c0c9cc1d15c8bbf6f8800e7c7d50482_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#120;&#125;&#95;&#107;\" title=\"Rendered by QuickLaTeX.com\" height=\"11\" width=\"18\" style=\"vertical-align: -3px;\"\/> (&#8220;x&#8221; in bold letter) is  the state at time <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-d42bc2203d6f76ad01b27ac9acc0bee1_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#107;\" title=\"Rendered by QuickLaTeX.com\" height=\"13\" width=\"9\" style=\"vertical-align: 0px;\"\/> that composes of the positions <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-9f7a125c094d5cd793eb4a83bb8318ce_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#120;&#95;&#107;\" title=\"Rendered by QuickLaTeX.com\" height=\"11\" width=\"17\" style=\"vertical-align: -3px;\"\/> and  <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-76fc8864fc0de59802f4fc7cacf86ce6_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#121;&#95;&#107;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"16\" style=\"vertical-align: -4px;\"\/>  and the velocities  <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-db308c5f7a921695942561b859d27f6f_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#92;&#100;&#111;&#116;&#32;&#32;&#120;&#95;&#107;\" title=\"Rendered by QuickLaTeX.com\" height=\"15\" width=\"17\" style=\"vertical-align: -3px;\"\/> and <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-6679a2f793dd4f66753e057644d467a1_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#92;&#100;&#111;&#116;&#32;&#32;&#121;&#95;&#107;\" title=\"Rendered by QuickLaTeX.com\" height=\"16\" width=\"16\" style=\"vertical-align: -4px;\"\/> at time <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-d42bc2203d6f76ad01b27ac9acc0bee1_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#107;\" title=\"Rendered by QuickLaTeX.com\" height=\"13\" width=\"9\" style=\"vertical-align: 0px;\"\/>. <\/p>\n\n\n\n<h3>Transformation matrix H <\/h3>\n\n\n\n<p>The measurement model for  2-D Kalman filter is the same as the 1-D Kalman filter model:<\/p>\n\n\n\n<p><a name=\"id3920594246\"><\/a><p class=\"ql-center-displayed-equation\" style=\"line-height: 15px;\"><span class=\"ql-right-eqno\"> (8) <\/span><span class=\"ql-left-eqno\"> &nbsp; <\/span><img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-272479a3dfe449c9597dca544da0dba4_l3.png\" height=\"15\" width=\"116\" class=\"ql-img-displayed-equation quicklatex-auto-format\" alt=\"&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;&#32;&#36;&#32;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#122;&#125;&#95;&#107;&#32;&#61;&#32;&#72;&#32;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#120;&#125;&#95;&#107;&#43;&#32;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#118;&#125;&#95;&#107;&#36;&#92;&#101;&#110;&#100;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;\" title=\"Rendered by QuickLaTeX.com\"\/><\/p>   <\/p>\n\n\n\n<p>In deriving the observation model, we assume that we&#8217;re only measuring the position but not the velocity.  Whereas, there are cases where the velocity must be taken into account to incorporate Doppler&#8217;s effect, for example, airplane and satellite tracking systems.<\/p>\n\n\n\n<p>We&#8217;re now considering the particular case where the velocity will not be considered in the measurement process. So, we can write the measurement model as follows:<\/p>\n\n\n\n<p>  <a name=\"id1185811560\"><\/a><p class=\"ql-center-displayed-equation\" style=\"line-height: 86px;\"><span class=\"ql-right-eqno\"> (9) <\/span><span class=\"ql-left-eqno\"> &nbsp; <\/span><img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-1e3dc2df8b7bbcce1a85430e583dc4b1_l3.png\" height=\"86\" width=\"228\" class=\"ql-img-displayed-equation quicklatex-auto-format\" alt=\"&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#122;&#125;&#95;&#107;&#32;&#61;&#32;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#49;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#48;&#92;&#92;&#32;&#48;&#32;&#38;&#32;&#49;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#48;&#92;&#92;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#32;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#120;&#95;&#107;&#92;&#92;&#32;&#121;&#95;&#107;&#32;&#92;&#92;&#32;&#32;&#92;&#100;&#111;&#116;&#32;&#32;&#120;&#95;&#107;&#32;&#92;&#92;&#32;&#92;&#100;&#111;&#116;&#32;&#32;&#121;&#95;&#107;&#32;&#92;&#92;&#32;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#43;&#32;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#118;&#125;&#95;&#123;&#107;&#125;&#32;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;\" title=\"Rendered by QuickLaTeX.com\"\/><\/p>   <\/p>\n\n\n\n<p>So, we have the transformation matrix <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-a7cedbc00aa5531f310166df85e3a9bb_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#72;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"16\" style=\"vertical-align: 0px;\"\/> as:<\/p>\n\n\n\n<p>  <a name=\"id1002015878\"><\/a><p class=\"ql-center-displayed-equation\" style=\"line-height: 43px;\"><span class=\"ql-right-eqno\"> (10) <\/span><span class=\"ql-left-eqno\"> &nbsp; <\/span><img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-3ff923d2d679dda1876441493c12f458_l3.png\" height=\"43\" width=\"138\" class=\"ql-img-displayed-equation quicklatex-auto-format\" alt=\"&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#72;&#125;&#32;&#61;&#32;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#49;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#48;&#92;&#92;&#32;&#48;&#32;&#38;&#32;&#49;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#48;&#92;&#92;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#92;&#101;&#110;&#100;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;\" title=\"Rendered by QuickLaTeX.com\"\/><\/p>  <\/p>\n\n\n\n<h3>Process noise covariance matrix Q<\/h3>\n\n\n\n<p>The process noise covariance matrix <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-dd440a7af28975f52f03607a49307d46_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#81;\" title=\"Rendered by QuickLaTeX.com\" height=\"16\" width=\"14\" style=\"vertical-align: -4px;\"\/> for 2-D Kalman filter can be written as:<\/p>\n\n\n\n<p> <a name=\"id4182536129\"><\/a><p class=\"ql-center-displayed-equation\" style=\"line-height: 108px;\"><span class=\"ql-right-eqno\"> (11) <\/span><span class=\"ql-left-eqno\"> &nbsp; <\/span><img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-fa6e54fbdcf5eb6ccf58c615404e8736_l3.png\" height=\"108\" width=\"304\" class=\"ql-img-displayed-equation quicklatex-auto-format\" alt=\"&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#92;&#113;&#117;&#97;&#100;&#92;&#92;&#32;&#32;&#32;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#81;&#125;&#32;&#61;&#32;&#32;&#32;&#92;&#113;&#117;&#97;&#100;&#92;&#92;&#32;&#32;&#32;&#32;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#92;&#113;&#117;&#97;&#100;&#92;&#92;&#32;&#32;&#120;&#32;&#92;&#92;&#32;&#121;&#32;&#92;&#92;&#32;&#92;&#100;&#111;&#116;&#32;&#32;&#120;&#32;&#92;&#92;&#32;&#92;&#100;&#111;&#116;&#32;&#32;&#121;&#32;&#92;&#92;&#32;&#92;&#101;&#110;&#100;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#97;&#114;&#114;&#97;&#121;&#125;&#123;&#99;&#125;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#120;&#32;&#32;&#92;&#109;&#115;&#112;&#97;&#99;&#101;&#123;&#50;&#55;&#109;&#117;&#125;&#32;&#38;&#32;&#32;&#121;&#32;&#32;&#32;&#92;&#109;&#115;&#112;&#97;&#99;&#101;&#123;&#50;&#55;&#109;&#117;&#125;&#32;&#32;&#32;&#32;&#38;&#32;&#32;&#32;&#92;&#100;&#111;&#116;&#32;&#32;&#120;&#32;&#32;&#32;&#92;&#109;&#115;&#112;&#97;&#99;&#101;&#123;&#50;&#55;&#109;&#117;&#125;&#32;&#32;&#38;&#32;&#32;&#92;&#100;&#111;&#116;&#32;&#32;&#121;&#32;&#92;&#101;&#110;&#100;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#92;&#92;&#92;&#108;&#101;&#102;&#116;&#91;&#92;&#32;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#92;&#115;&#105;&#103;&#109;&#97;&#94;&#50;&#95;&#120;&#32;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#32;&#32;&#92;&#115;&#105;&#103;&#109;&#97;&#95;&#120;&#32;&#92;&#115;&#105;&#103;&#109;&#97;&#95;&#32;&#123;&#92;&#100;&#111;&#116;&#32;&#120;&#125;&#32;&#32;&#32;&#38;&#32;&#48;&#32;&#92;&#92;&#32;&#48;&#32;&#32;&#38;&#32;&#32;&#92;&#115;&#105;&#103;&#109;&#97;&#94;&#50;&#95;&#121;&#32;&#32;&#32;&#32;&#38;&#32;&#32;&#48;&#32;&#32;&#38;&#32;&#32;&#32;&#92;&#115;&#105;&#103;&#109;&#97;&#95;&#121;&#32;&#92;&#115;&#105;&#103;&#109;&#97;&#95;&#32;&#123;&#92;&#100;&#111;&#116;&#32;&#121;&#125;&#32;&#32;&#32;&#92;&#92;&#32;&#32;&#32;&#32;&#92;&#115;&#105;&#103;&#109;&#97;&#95;&#32;&#123;&#92;&#100;&#111;&#116;&#32;&#120;&#125;&#32;&#92;&#115;&#105;&#103;&#109;&#97;&#95;&#120;&#32;&#32;&#32;&#32;&#38;&#32;&#48;&#32;&#32;&#38;&#32;&#32;&#92;&#115;&#105;&#103;&#109;&#97;&#94;&#50;&#95;&#123;&#92;&#100;&#111;&#116;&#32;&#120;&#125;&#32;&#32;&#38;&#32;&#48;&#32;&#32;&#92;&#92;&#32;&#32;&#32;&#32;&#48;&#32;&#38;&#32;&#32;&#32;&#92;&#115;&#105;&#103;&#109;&#97;&#95;&#32;&#123;&#92;&#100;&#111;&#116;&#32;&#121;&#125;&#32;&#92;&#115;&#105;&#103;&#109;&#97;&#95;&#121;&#32;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#32;&#92;&#115;&#105;&#103;&#109;&#97;&#94;&#50;&#95;&#123;&#92;&#100;&#111;&#116;&#32;&#121;&#125;&#32;&#32;&#92;&#92;&#32;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#92;&#32;&#92;&#114;&#105;&#103;&#104;&#116;&#93;&#32;&#92;&#101;&#110;&#100;&#123;&#97;&#114;&#114;&#97;&#121;&#125;&#32;&#92;&#101;&#110;&#100;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;\" title=\"Rendered by QuickLaTeX.com\"\/><\/p>    <\/p>\n\n\n\n<p>By using the same philosophy as what we&#8217;ve discussed earlier in my <a href=\"https:\/\/machinelearningspace.com\/object-tracking-simple-implementation-of-kalman-filter-in-python\/#noise-covariance\">previous tutorial<\/a> for 1-D Kalman filter, we can rewrite the process noise covariance matrix for 2-D Kalman filter as: <\/p>\n\n\n\n<p>  <a name=\"id1142397845\"><\/a><p class=\"ql-center-displayed-equation\" style=\"line-height: 97px;\"><span class=\"ql-right-eqno\"> (12) <\/span><span class=\"ql-left-eqno\"> &nbsp; <\/span><img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-f1f8cc6adb0ae8be066f2bef3b6701af_l3.png\" height=\"97\" width=\"240\" class=\"ql-img-displayed-equation quicklatex-auto-format\" alt=\"&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;&#32;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#81;&#125;&#32;&#61;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#32;&#92;&#102;&#114;&#97;&#99;&#123;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#94;&#52;&#125;&#125;&#123;&#52;&#125;&#32;&#32;&#32;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#32;&#32;&#92;&#102;&#114;&#97;&#99;&#123;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#94;&#51;&#125;&#125;&#123;&#50;&#125;&#32;&#32;&#32;&#32;&#38;&#32;&#48;&#92;&#92;&#32;&#48;&#32;&#32;&#38;&#32;&#32;&#92;&#102;&#114;&#97;&#99;&#123;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#94;&#52;&#125;&#125;&#123;&#52;&#125;&#32;&#32;&#32;&#38;&#32;&#32;&#48;&#32;&#32;&#38;&#32;&#32;&#32;&#92;&#102;&#114;&#97;&#99;&#123;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#94;&#51;&#125;&#125;&#123;&#50;&#125;&#32;&#32;&#32;&#92;&#92;&#32;&#32;&#32;&#32;&#32;&#92;&#102;&#114;&#97;&#99;&#123;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#94;&#51;&#125;&#125;&#123;&#50;&#125;&#32;&#32;&#38;&#32;&#48;&#32;&#32;&#38;&#32;&#32;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#94;&#50;&#125;&#32;&#32;&#32;&#32;&#38;&#32;&#48;&#32;&#32;&#92;&#92;&#32;&#32;&#32;&#48;&#32;&#38;&#32;&#32;&#32;&#32;&#92;&#102;&#114;&#97;&#99;&#123;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#94;&#51;&#125;&#125;&#123;&#50;&#125;&#32;&#32;&#32;&#32;&#38;&#32;&#48;&#32;&#38;&#32;&#32;&#32;&#92;&#68;&#101;&#108;&#116;&#97;&#123;&#116;&#94;&#50;&#125;&#32;&#32;&#32;&#92;&#92;&#32;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#98;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#92;&#115;&#105;&#103;&#109;&#97;&#94;&#50;&#95;&#97;&#32;&#32;&#32;&#32;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;\" title=\"Rendered by QuickLaTeX.com\"\/><\/p>       <\/p>\n\n\n\n<p>Where the <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-08e8d9f62f13851b3b5512a55ed5b710_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#92;&#115;&#105;&#103;&#109;&#97;&#95;&#97;\" title=\"Rendered by QuickLaTeX.com\" height=\"11\" width=\"17\" style=\"vertical-align: -3px;\"\/> is the magnitude of the standard deviation of the acceleration that is basically the process noise effecting on the process noise covariance matrix. <\/p>\n\n\n\n<h3>Measurement noise covariance matrix R<\/h3>\n\n\n\n<p>In 2-D Kalman filter, we suppose that the measurement positions <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-7e5fbfa0bbbd9f3051cd156a0f1b5e31_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#120;\" title=\"Rendered by QuickLaTeX.com\" height=\"8\" width=\"10\" style=\"vertical-align: 0px;\"\/> and <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-38461fc041e953482219abf5d4cce1cb_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#121;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"9\" style=\"vertical-align: -4px;\"\/> are both independent, so we can ignore any interaction between them so that the covariance <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-7e5fbfa0bbbd9f3051cd156a0f1b5e31_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#120;\" title=\"Rendered by QuickLaTeX.com\" height=\"8\" width=\"10\" style=\"vertical-align: 0px;\"\/> and <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-38461fc041e953482219abf5d4cce1cb_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#121;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"9\" style=\"vertical-align: -4px;\"\/> is 0. We look at only the variance in the <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-7e5fbfa0bbbd9f3051cd156a0f1b5e31_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#120;\" title=\"Rendered by QuickLaTeX.com\" height=\"8\" width=\"10\" style=\"vertical-align: 0px;\"\/> and the variance in the <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-38461fc041e953482219abf5d4cce1cb_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#121;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"9\" style=\"vertical-align: -4px;\"\/>. <\/p>\n\n\n\n<p>Then, the measurement noise covariance  <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-d6abdd487c56e5efbb2c9522ed4b9360_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#82;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"14\" style=\"vertical-align: 0px;\"\/> can be written as follows:<\/p>\n\n\n\n<p> <a name=\"id3446937855\"><\/a><p class=\"ql-center-displayed-equation\" style=\"line-height: 59px;\"><span class=\"ql-right-eqno\"> (13) <\/span><span class=\"ql-left-eqno\"> &nbsp; <\/span><img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-22ccd16096187de4df59896e0778d033_l3.png\" height=\"59\" width=\"157\" class=\"ql-img-displayed-equation quicklatex-auto-format\" alt=\"&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#92;&#113;&#117;&#97;&#100;&#92;&#92;&#32;&#32;&#32;&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#123;&#82;&#125;&#32;&#61;&#32;&#32;&#32;&#92;&#113;&#117;&#97;&#100;&#92;&#92;&#32;&#32;&#32;&#32;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#92;&#113;&#117;&#97;&#100;&#92;&#92;&#32;&#32;&#120;&#32;&#92;&#92;&#32;&#121;&#32;&#92;&#92;&#92;&#101;&#110;&#100;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#97;&#114;&#114;&#97;&#121;&#125;&#123;&#99;&#125;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#120;&#32;&#32;&#92;&#109;&#115;&#112;&#97;&#99;&#101;&#123;&#50;&#55;&#109;&#117;&#125;&#32;&#38;&#32;&#32;&#121;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#92;&#92;&#92;&#108;&#101;&#102;&#116;&#91;&#92;&#32;&#32;&#92;&#98;&#101;&#103;&#105;&#110;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#32;&#92;&#115;&#105;&#103;&#109;&#97;&#94;&#50;&#95;&#120;&#32;&#38;&#32;&#32;&#48;&#32;&#32;&#92;&#92;&#48;&#32;&#38;&#32;&#32;&#92;&#115;&#105;&#103;&#109;&#97;&#94;&#50;&#95;&#121;&#32;&#32;&#92;&#92;&#32;&#32;&#32;&#92;&#101;&#110;&#100;&#123;&#109;&#97;&#116;&#114;&#105;&#120;&#125;&#92;&#32;&#92;&#114;&#105;&#103;&#104;&#116;&#93;&#32;&#92;&#101;&#110;&#100;&#123;&#97;&#114;&#114;&#97;&#121;&#125;&#32;&#92;&#101;&#110;&#100;&#123;&#101;&#113;&#117;&#97;&#116;&#105;&#111;&#110;&#42;&#125;\" title=\"Rendered by QuickLaTeX.com\"\/><\/p>   <\/p>\n\n\n\n<p>Great! We have discussed the essential concepts of 2-D Kalman filter, and now it&#8217;s time to implement it in Python. Let&#8217;s do it! <\/p>\n\n\n\n<h2>Python Implementation<\/h2>\n\n\n\n<p>Now we\u2019re ready to implement  2-D Kalman Filter in Python.  So, let&#8217;s do it..<\/p>\n\n\n\n<p>This project has three files, namely: <code>KalmanFilter.py<\/code>, <code>Detector.py<\/code>, and <code>objTracking.py<\/code>.<\/p>\n\n\n\n<h3>KalmanFilter.py  <\/h3>\n\n\n\n<p>Let&#8217;s look at first the <code>KalmanFilter.py<\/code>. This file contains one class called <code>KalmanFilter<\/code> consisting of three functions, <code>__init__()<\/code>, <code>predict()<\/code>, and <code>update()<\/code>.<\/p>\n\n\n\n<p>We&#8217;re going to discuss these functions one by one.<\/p>\n\n\n\n<h4>Function <em>Initialization<\/em>()<\/h4>\n\n\n\n<p>The  function <code>__init__<\/code>() is used to initialize the class parameters.  It has six parameters, <code>dt<\/code>, <code>u_x<\/code>, <code>u_y<\/code>, <code>std_acc<\/code>, <code>x_std_meas<\/code> and  <code>y_std_meas<\/code>.  The <code>dt<\/code> is the sampling time or the time for 1 cycle  used  to estimate the state, <code>u_x<\/code> and <code>u_y<\/code> are the accelerations in the <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-7e5fbfa0bbbd9f3051cd156a0f1b5e31_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#120;\" title=\"Rendered by QuickLaTeX.com\" height=\"8\" width=\"10\" style=\"vertical-align: 0px;\"\/>&#8211; and <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-38461fc041e953482219abf5d4cce1cb_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#121;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"9\" style=\"vertical-align: -4px;\"\/>-directions, respectively. The <code>std_acc<\/code> is the process noise magnitude, <code>x_std_meas <\/code>and  <code>x_std_meas<\/code> are the standard deviations of the measurement in the <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-7e5fbfa0bbbd9f3051cd156a0f1b5e31_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#120;\" title=\"Rendered by QuickLaTeX.com\" height=\"8\" width=\"10\" style=\"vertical-align: 0px;\"\/>&#8211; and <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-38461fc041e953482219abf5d4cce1cb_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#121;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"9\" style=\"vertical-align: -4px;\"\/>-directions, respectively. <\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"atomic\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">class KalmanFilter(object):\n    def __init__(self, dt, u_x,u_y, std_acc, x_std_meas, y_std_meas):\n        \"\"\"\n        :param dt: sampling time (time for 1 cycle)\n        :param u_x: acceleration in x-direction\n        :param u_y: acceleration in y-direction\n        :param std_acc: process noise magnitude\n        :param x_std_meas: standard deviation of the measurement in x-direction\n        :param y_std_meas: standard deviation of the measurement in y-direction\n        \"\"\"\n\n        # Define sampling time\n        self.dt = dt\n\n        # Define the  control input variables\n        self.u = np.matrix([[u_x],[u_y]])\n\n        # Intial State\n        self.x = np.matrix([[0], [0], [0], [0]])\n\n        # Define the State Transition Matrix A\n        self.A = np.matrix([[1, 0, self.dt, 0],\n                            [0, 1, 0, self.dt],\n                            [0, 0, 1, 0],\n                            [0, 0, 0, 1]])\n\n        # Define the Control Input Matrix B\n        self.B = np.matrix([[(self.dt**2)\/2, 0],\n                            [0, (self.dt**2)\/2],\n                            [self.dt,0],\n                            [0,self.dt]])\n\n        # Define Measurement Mapping Matrix\n        self.H = np.matrix([[1, 0, 0, 0],\n                            [0, 1, 0, 0]])\n\n        #Initial Process Noise Covariance\n        self.Q = np.matrix([[(self.dt**4)\/4, 0, (self.dt**3)\/2, 0],\n                            [0, (self.dt**4)\/4, 0, (self.dt**3)\/2],\n                            [(self.dt**3)\/2, 0, self.dt**2, 0],\n                            [0, (self.dt**3)\/2, 0, self.dt**2]]) * std_acc**2\n\n        #Initial Measurement Noise Covariance\n        self.R = np.matrix([[x_std_meas**2,0],\n                           [0, y_std_meas**2]])\n\n        #Initial Covariance Matrix\n        self.P = np.eye(self.A.shape[1])\n<\/pre>\n\n\n\n<p>We define the matrices A, B, and H as exactly in eq.(<a href=\"#id2300232522\">6<\/a>),  eq.(<a href=\"#id841436821\">7<\/a>), and  (<a href=\"#id1002015878\">10<\/a>), respectively.  We define also the matrices Q and R as in eq.(<a href=\"#id1142397845\">12<\/a>) and  eq.(<a href=\"#id3446937855\">13<\/a>) , respectively.<\/p>\n\n\n\n<p>The covariance matrix <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-fda1e51b12ba3624074fcbebad72b1fc_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#80;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"14\" style=\"vertical-align: 0px;\"\/> can be initialized as an identity matrix whose shape is the same as the shape of the matrix A.<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"atomic\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"47\" data-enlighter-title=\"\" data-enlighter-group=\"\">        #Initial Covariance Matrix\n        self.P = np.eye(self.A.shape[1])<\/pre>\n\n\n\n<h4>Function <em>predict<\/em>()<\/h4>\n\n\n\n<p>The function<code>predict()<\/code> does the prediction of the state estimate <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-fb40c7cb76549e15a8e280ea2320b405_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#32;&#123;&#92;&#94;&#123;&#120;&#125;&#125;&#94;&#123;&#45;&#125;&#95;&#107;\" title=\"Rendered by QuickLaTeX.com\" height=\"19\" width=\"21\" style=\"vertical-align: -6px;\"\/> and the error covariance <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-d1c004d0e4a3c0792b19fbe733318ffe_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#32;&#123;&#80;&#125;&#94;&#123;&#45;&#125;&#95;&#107;\" title=\"Rendered by QuickLaTeX.com\" height=\"18\" width=\"24\" style=\"vertical-align: -6px;\"\/> . This task also called the time update process because it projects forward the current state to the next time step. We use the same equation for the time update process as we discussed earlier in our last tutorial. Please refer to Eq.(<a href=\"https:\/\/machinelearningspace.com\/object-tracking-simple-implementation-of-kalman-filter-in-python#time-update\">9<\/a>) and Eq.(<a href=\"https:\/\/machinelearningspace.com\/object-tracking-simple-implementation-of-kalman-filter-in-python#time-update\">10<\/a>) of the last tutorial.<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"atomic\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"53\" data-enlighter-title=\"\" data-enlighter-group=\"\">    def predict(self):\n        # Refer to :Eq.(9) and Eq.(10)  in https:\/\/machinelearningspace.com\/object-tracking-simple-implementation-of-kalman-filter-in-python\/?preview_id=1364&amp;preview_nonce=52f6f1262e&amp;preview=true&amp;_thumbnail_id=1795\n\n        # Update time state\n        #x_k =Ax_(k-1) + Bu_(k-1)     Eq.(9)\n        self.x = np.dot(self.A, self.x) + np.dot(self.B, self.u)\n\n        # Calculate error covariance\n        # P= A*P*A' + Q               Eq.(10)\n        self.P = np.dot(np.dot(self.A, self.P), self.A.T) + self.Q\n        return self.x[0:2]<\/pre>\n\n\n\n<h4>Function <em>update<\/em>()<\/h4>\n\n\n\n<p>During the update stage, we compute the Kalman gain  <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-da0435ff7424603dc93ebe340b304e75_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#32;&#123;&#75;&#125;&#95;&#107;\" title=\"Rendered by QuickLaTeX.com\" height=\"16\" width=\"23\" style=\"vertical-align: -3px;\"\/>, then update the  predicted state estimate  <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-e71829888637ed2430504666db673520_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#32;&#123;&#92;&#94;&#123;&#120;&#125;&#125;&#95;&#107;\" title=\"Rendered by QuickLaTeX.com\" height=\"16\" width=\"18\" style=\"vertical-align: -3px;\"\/> and predicted error  covariance  <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-55b078aa5e2775a7a81369879eec9e1f_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#92;&#116;&#101;&#120;&#116;&#98;&#102;&#32;&#123;&#80;&#125;&#95;&#107;\" title=\"Rendered by QuickLaTeX.com\" height=\"15\" width=\"21\" style=\"vertical-align: -3px;\"\/>.  Please refer to Eq.(<a href=\"https:\/\/machinelearningspace.com\/object-tracking-simple-implementation-of-kalman-filter-in-python#measurement-update\">11<\/a>),  Eq.(<a href=\"https:\/\/machinelearningspace.com\/object-tracking-simple-implementation-of-kalman-filter-in-python#measurement-update\">12<\/a>) and Eq.(<a href=\"https:\/\/machinelearningspace.com\/object-tracking-simple-implementation-of-kalman-filter-in-python#measurement-update\">13<\/a>) of the last tutorial. <\/p>\n\n\n\n<p>The following is our code of the function <code>update()<\/code> that returns the updated positions of the <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-7e5fbfa0bbbd9f3051cd156a0f1b5e31_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#120;\" title=\"Rendered by QuickLaTeX.com\" height=\"8\" width=\"10\" style=\"vertical-align: 0px;\"\/> and <img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/machinelearningspace.com\/wp-content\/ql-cache\/quicklatex.com-38461fc041e953482219abf5d4cce1cb_l3.png\" class=\"ql-img-inline-formula quicklatex-auto-format\" alt=\"&#121;\" title=\"Rendered by QuickLaTeX.com\" height=\"12\" width=\"9\" style=\"vertical-align: -4px;\"\/>.<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"atomic\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"65\" data-enlighter-title=\"\" data-enlighter-group=\"\">    def update(self, z):\n\n        # Refer to :Eq.(11), Eq.(12) and Eq.(13)  in https:\/\/machinelearningspace.com\/object-tracking-simple-implementation-of-kalman-filter-in-python\/?preview_id=1364&amp;preview_nonce=52f6f1262e&amp;preview=true&amp;_thumbnail_id=1795\n        # S = H*P*H'+R\n        S = np.dot(self.H, np.dot(self.P, self.H.T)) + self.R\n\n        # Calculate the Kalman Gain\n        # K = P * H'* inv(H*P*H'+R)\n        K = np.dot(np.dot(self.P, self.H.T), np.linalg.inv(S))  #Eq.(11)\n\n        self.x = np.round(self.x + np.dot(K, (z - np.dot(self.H, self.x))))   #Eq.(12)\n\n        I = np.eye(self.H.shape[1])\n\n        # Update error covariance matrix\n        self.P = (I - (K * self.H)) * self.P   #Eq.(13)\n        return self.x[0:2]<\/pre>\n\n\n\n<p>Now, we&#8217;re going to look at the <code>Detector.py<\/code><\/p>\n\n\n\n<h3>Detector.py<\/h3>\n\n\n\n<p>This file plays a rule as an object detector. Since we&#8217;re detecting a simple object like a moving circle, we no need an advance object detector using machine learning. It&#8217;s enough to do by only using classical image processing algorithms.<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"atomic\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"># Import python libraries\nimport numpy as np\nimport cv2\n\ndef detect(frame,debugMode):\n    # Convert frame from BGR to GRAY\n    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n\n    if (debugMode):\n        cv2.imshow('gray', gray)\n\n    # Edge detection using Canny function\n    img_edges = cv2.Canny(gray,  50, 190, 3)\n    if (debugMode):\n        cv2.imshow('img_edges', img_edges)\n\n    # Convert to black and white image\n    ret, img_thresh = cv2.threshold(img_edges, 254, 255,cv2.THRESH_BINARY)\n    if (debugMode):\n        cv2.imshow('img_thresh', img_thresh)\n\n    # Find contours\n    contours, _ = cv2.findContours(img_thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)\n\n    # Set the accepted minimum &amp; maximum radius of a detected object\n    min_radius_thresh= 3\n    max_radius_thresh= 30   \n\n    centers=[]\n    for c in contours:\n        # ref: https:\/\/docs.opencv.org\/trunk\/dd\/d49\/tutorial_py_contour_features.html\n        (x, y), radius = cv2.minEnclosingCircle(c)\n        radius = int(radius)\n\n        #Take only the valid circles\n        if (radius > min_radius_thresh) and (radius &lt; max_radius_thresh):\n            centers.append(np.array([[x], [y]]))\n    cv2.imshow('contours', img_thresh)\n    return centers\n<\/pre>\n\n\n\n<p>The <code>Detector.py<\/code> only contains one function, that is the <code>detect()<\/code>. It has two arguments, the<code>frame<\/code> and <code>debugMode<\/code>.  When calling this function, it will convert a video frame passed through the <code>frame<\/code> argument to a Grayscale image using <code>cv2.cvtColor()<\/code>.  After that, it detects the edge of the object in the image using Canny edge detection.<\/p>\n\n\n\n<p>Then, using <code>cv2.threshold()<\/code> function, the image is converted to a binary image. A threshold value is applied.  If a pixel value is greater than a threshold value, it is assigned a specific value (e.g. 255, white), else it will be converted to 0, or black.<\/p>\n\n\n\n<p>From the binary image, then we find the contour representing an object in the image using <code>cv2.findContours()<\/code>. <\/p>\n\n\n\n<p>Finally, in every detected contour,  we find the circumcircle of an object using the function <code>cv2.minEnclosingCircle()<\/code>. The circle candidate must meet the minimum and maximum radius values. <\/p>\n\n\n\n<p>Since this function is purposed to detected multiple objects, it returns the centers of the detected objects. Meaning that we can use this function not only for detecting one object but also for detecting multi-object.<\/p>\n\n\n\n<p>Every processing step can be displayed by setting the <code>debugMode<\/code>=1 when calling the function <code>detect()<\/code>.<\/p>\n\n\n\n<p>Now we&#8217;re going to discuss the file <code>objTracking.py<\/code>.  <\/p>\n\n\n\n<h2>objTracking.py<\/h2>\n\n\n\n<p>This is the main file of this project that we&#8217;ll execute to track an object. At the beginning of this file, we import function <code>detect()<\/code> from the file <code>Detector.py<\/code>, and class <code>KalmanFilter<\/code> from the file <code>KalmanFilter.py<\/code>.<\/p>\n\n\n\n<p>In the function <code>main()<\/code>, we create the object of the class<code>KalmanFilter<\/code>  as follows:<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"atomic\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"21\" data-enlighter-title=\"\" data-enlighter-group=\"\">    #Create KalmanFilter object KF\n    #KalmanFilter(dt, u_x, u_y, std_acc, x_std_meas, y_std_meas)\n    KF = KalmanFilter(0.1, 1, 1, 1, 0.1,0.1)<\/pre>\n\n\n\n<p>We set the parameters values as: <code>dt<\/code> = 0.1 , <code>u_x<\/code> = 1, <code>u_y<\/code>=1, <code>std_acc<\/code> = 1, <code>y_std_meas<\/code> =1. You can try to set other values and observed the performance.<\/p>\n\n\n\n<p>After that, we create the object of the cv2.VideoCapture():<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"atomic\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"25\" data-enlighter-title=\"\" data-enlighter-group=\"\">    # Create opencv video capture object\n    VideoCap = cv2.VideoCapture('video\/OneBall.avi')<\/pre>\n\n\n\n<p>Since the video is read in RGB format, it is necessary to convert it to Grayscale format. For this task, we perform it in the file <code>Detector.py<\/code> as we discussed already earlier.<\/p>\n\n\n\n<p>In the while loop and in every looping, we read a video frame and detect the center of an object in that frame. If the center is detected, then call the Kalman filter prediction function <code>KF.predict()<\/code> and  the Kalman filter updating function <code>KF.upadate()<\/code> to update the position of the object given a new measurement value (a detected center) and a prediction position.<\/p>\n\n\n\n<p>The rest of the cod is to draw a circle and two rectangles. The circle is for the measured position and the rectangles are for the predicted and updated positions.<\/p>\n\n\n\n<p>Here is the complete code for <code>objTracking.py<\/code>.<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"atomic\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">import cv2\nfrom Detector import detect\nfrom KalmanFilter import KalmanFilter\n\ndef main():\n\n    HiSpeed= 100\n    ControlSpeedVar = 30  #Lowest: 1 - Highest:100\n    debugMode=1\n\n    #Create KalmanFilter object KF\n    #KalmanFilter(dt, u_x, u_y, std_acc, x_std_meas, y_std_meas)\n    KF = KalmanFilter(0.1, 1, 1, 1, 0.1,0.1)\n\n    # Create opencv video capture object\n    VideoCap = cv2.VideoCapture('video\/OneBall.avi')\n\n    while(True):\n        # Read frame\n        ret, frame = VideoCap.read()\n\n        # Detect object\n        centers = detect(frame,debugMode)\n        \n        # If centroids are detected then track them\n        if (len(centers) > 0):\n\n            # Draw the detected circle\n            cv2.circle(frame, (int(centers[0][0]), int(centers[0][1])), 10, (0, 191, 255), 2)\n\n            # Predict\n            (x, y) = KF.predict()\n            # Draw a rectangle as the predicted object position\n            cv2.rectangle(frame, (x - 15, y - 15), (x + 15, y + 15), (255, 0, 0), 2)\n\n            # Update\n            (x1, y1) = KF.update(centers[0])\n            # Draw a rectangle as the estimated object position\n            cv2.rectangle(frame, (x1 - 15, y1 - 15), (x1 + 15, y1 + 15), (0, 0, 255), 2)\n\n            cv2.putText(frame, \"Estimated Position\", (x1 + 15, y1 + 10), 0, 0.5, (0, 0, 255), 2)\n            cv2.putText(frame, \"Predicted Position\", (x + 15, y), 0, 0.5, (255, 0, 0), 2)\n            cv2.putText(frame, \"Measured Position\", (centers[0][0] + 15, centers[0][1] - 15), 0, 0.5, (0,191,255), 2)\n\n        cv2.imshow('image', frame)\n\n        if cv2.waitKey(2) &amp; 0xFF == ord('q'):\n            VideoCap.release()\n            cv2.destroyAllWindows()\n            break\n\n        cv2.waitKey(HiSpeed-ControlSpeedVar+1)\n\n\nif __name__ == \"__main__\":\n    # execute main\n    main()<\/pre>\n\n\n\n<p>To run this program, I provide a video that you can download it <a href=\"https:\/\/github.com\/RahmadSadli\/2-D-Kalman-Filter\/tree\/master\/video\/randomball.avi\">here<\/a>.<\/p>\n\n\n\n<p>The complete code of this project can be found in the link below:<\/p>\n\n\n\n<p><a href=\"https:\/\/github.com\/RahmadSadli\/2-D-Kalman-Filter\">https:\/\/github.com\/RahmadSadli\/2-D-Kalman-Filter<\/a><\/p>\n\n\n\n<p>This is the end of this tutorial and see you in the next tutorial.<\/p>\n\n\n\n<h4>Recent posts:<\/h4>\n\n\n\n<ul><li><a href=\"https:\/\/machinelearningspace.com\/object-tracking-simple-implementation-of-kalman-filter-in-python\/\">Object Tracking: Simple Implementation of Kalman<\/a><\/li><li><a href=\"https:\/\/machinelearningspace.com\/nlp-sentiment-analysis-using-keras-embedding-layer-in-tensorflow-2-0\/\">Sentiment Analysis Using Keras Embedding Layer in TensorFlow 2.0<\/a><\/li><li><a href=\"https:\/\/machinelearningspace.com\/the-beginners-guide-to-implementing-yolov3-in-tensorflow-2-0-part-1\/\">The beginner\u2019s guide to implementing YOLOv3 in TensorFlow 2.0<\/a><\/li><\/ul>\n\n\n\n<h2>Reference<\/h2>\n\n\n\n<ol><li><a href=\"https:\/\/www.cs.unc.edu\/~welch\/media\/pdf\/kalman_intro.pdf\">Greg Welch and Gary Bishop, &#8216;An Introduction to the Kalman Filter&#8217;, July 24, 2006<\/a> <\/li><li><a href=\"https:\/\/www.intechopen.com\/books\/introduction-and-implementations-of-the-kalman-filter\/introduction-to-kalman-filter-and-its-applications#B5\">Youngjoo Kim and Hyochoong Bang, Introduction to Kalman Filter and Its Applications, November 2018<\/a><\/li><li><a href=\"http:\/\/studentdavestutorials.weebly.com\/\">Student Dave, Kalman Filter With Matlab Code<\/a><\/li><\/ol>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, we&#8217;re going to continue our discussion about the object tracking using Kalman Filter. Specifically in this part, we&#8217;re going to discover 2-D object tracking.<\/p>\n","protected":false},"author":2,"featured_media":1958,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"_mi_skip_tracking":false},"categories":[6,18,3],"tags":[60,72,62,103,102,100,101,104,61,68,70,46,63,67,69,105,23,64,16,13,71],"_links":{"self":[{"href":"https:\/\/machinelearningspace.com\/wp-json\/wp\/v2\/posts\/1887"}],"collection":[{"href":"https:\/\/machinelearningspace.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/machinelearningspace.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/machinelearningspace.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/machinelearningspace.com\/wp-json\/wp\/v2\/comments?post=1887"}],"version-history":[{"count":5,"href":"https:\/\/machinelearningspace.com\/wp-json\/wp\/v2\/posts\/1887\/revisions"}],"predecessor-version":[{"id":2735,"href":"https:\/\/machinelearningspace.com\/wp-json\/wp\/v2\/posts\/1887\/revisions\/2735"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/machinelearningspace.com\/wp-json\/wp\/v2\/media\/1958"}],"wp:attachment":[{"href":"https:\/\/machinelearningspace.com\/wp-json\/wp\/v2\/media?parent=1887"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/machinelearningspace.com\/wp-json\/wp\/v2\/categories?post=1887"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/machinelearningspace.com\/wp-json\/wp\/v2\/tags?post=1887"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}